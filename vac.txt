Типы данных — это классификация данных, которая определяет, какие значения может принимать переменная и какие операции можно над ними выполнять.

Основные типы данных
1. Числовые типы
Используются для представления чисел.

Целые числа (integer): представляют целые значения без дробной части.
Примеры: int в Python, int в C++, int в Java.

x = 42  # Целое число

Числа с плавающей точкой (float/double): представляют вещественные числа (с дробной частью).
Примеры: float в Python, float и double в C++/Java.

pi = 3.14  # Число с плавающей точкой

Комплексные числа (complex): представляют числа вида a + bi.
Пример (Python):

z = 2 + 3j  # Комплексное число

2. Логические типы (Boolean)
Используются для хранения истинностных значений: True или False.
Примеры: bool в Python, boolean в Java.

is_active = True  # Логическое значение

3. Строки (String)
Используются для представления текста.
Примеры: str в Python, String в Java, char[] в C++.

name = "Alice"

4. Символы (Char)
Используются для хранения одного символа.
Пример (C++, Java):

char grade = 'A';  // Символ

5. Списки и массивы
Списки (List/Array): упорядоченные коллекции элементов.
Пример (Python):

numbers = [1, 2, 3, 4]  # Список

6. Множества (Set)
Используются для хранения уникальных элементов.
Пример (Python):

unique_numbers = {1, 2, 3, 3}  # Результат: {1, 2, 3}

7. Словари (Dictionary/Map)
Хранят пары "ключ-значение".
Пример (Python):

user = {"name": "Alice", "age": 25}

Расширенные типы данных
1. NULL/None
Используются для обозначения отсутствия значения.
Пример (Python):

value = None

2. Байты (Bytes)
Используются для представления бинарных данных.
Пример (Python):

data = b"hello"  # Байтовая строка

Абстрактные типы данных
Стеки (Stack): структура данных с принципом LIFO (последний вошел — первый вышел).
Очереди (Queue): структура данных с принципом FIFO (первый вошел — первый вышел).
Дек (Deque): двухсторонняя очередь.
Примерная классификация по языкам
Язык	Основные типы данных
Python	int, float, complex, bool, str, list, dict, set, tuple, None
